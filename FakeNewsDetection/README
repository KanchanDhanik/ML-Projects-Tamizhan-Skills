# 📰 Fake News Detection System

A machine learning application that classifies news articles as real or fake using Natural Language Processing (NLP) techniques.

![Project Screenshot](https://github.com/KanchanDhanik/ML-Projects-Tamizhan-Skills/blob/main/FakeNewsDetection/screenshot.png)

## 🔍 Overview

This project implements a fake news classifier using:
- Python and Streamlit for the web interface
- NLTK for text preprocessing
- Scikit-learn for machine learning
- Logistic Regression as the classification algorithm

## 📂 Project Structure
FakeNewsDetection/
├── data/ # Dataset files
│ ├── train.tsv # Training data
│ ├── test.tsv # Test data
│ └── valid.tsv # Validation data
├── models/ # Saved models
│ ├── fake_news_detector.pkl
│ └── tfidf_vectorizer.pkl
├── src.py # Main application code
├── requirements.txt # Dependencies
└── README.md # This file


## 🛠️ Installation

1. Clone the repository:
```bash
git clone https://github.com/KanchanDhanik/ML-Projects-Tamizhan-Skills.git
cd ML-Projects-Tamizhan-Skills/FakeNewsDetection

Install dependencies

pip install -r requirements.txt

🚀 Usage
Run the application:
streamlit run src.py

🧠 Model Details
Algorithm: Logistic Regression

Accuracy: ~85-90% on test data

Features: TF-IDF vectorization (5000 features)

Preprocessing:

Lowercasing

Special character removal

Tokenization

Stopword removal

Lemmatization

Stemming

📊 Dataset
The model uses the LIAR dataset containing labeled statements from PolitiFact:

True: 1

Mostly-true: 1

Half-true: 1

Barely-true: 0

False: 0

Pants-fire: 0


📧 Contact
For questions or feedback, please contact:

Kanchan Dhanik

Email:kanchandhanik2003@gmail.com

GitHub: @KanchanDhanik


### Key Features:

1. **Clear Project Structure**: Shows exactly where files should be placed
2. **Complete Installation Instructions**: With git clone and pip install commands
3. **Visual Elements**: Space for screenshot (add one later)
4. **Technical Details**: Explains the ML model and preprocessing
5. **Dataset Information**: Documents the labeling scheme
6. **Contact Information**: For collaboration

To use this:
1. Create a new `README.md` file in your project folder
2. Paste this content
3. Customize the contact information
4. Add a screenshot later by uploading to your repo and updating the link
5. Commit and push to your GitHub repository

The markdown formatting will render nicely on GitHub and provide all necessary information for users to understand and run your project.
